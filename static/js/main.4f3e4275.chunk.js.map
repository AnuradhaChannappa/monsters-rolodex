{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","fetch","then","response","json","users","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,mCAAON,EAAMI,QAAQG,aCJpBC,EAAW,SAAAR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SAEGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAEpB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCN1BM,G,MAAY,SAAC,GAAqC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,aACtC,OACA,qBAAKZ,UAAU,mBAAf,SACA,uBACIA,UAAW,SACXa,KAAO,SACPF,YAAgBA,EAChBG,SAAaF,QCqCNG,E,kDA3Cb,aAAc,IAAD,8BACX,gBAWFH,aAAe,SAACI,GACd,EAAKC,SAAU,CAAEC,YAAcF,EAAEG,OAAOC,SAVxC,EAAKC,MAAS,CACVb,SAAU,GACVU,YAAa,IALN,E,0CAeb,WAEE,MAAkCI,KAAKD,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZK,EAAmBf,EAASgB,QAAQ,SAAArB,GAAO,OAC/CA,EAAQE,KAAKoB,cAAcC,SAASR,EAAYS,wBAGlD,OACE,sBAAK3B,UAAU,MAAf,UACE,gCACE,kDACD,cAAC,EAAD,CACCW,YAAc,kBACdC,aAAiBU,KAAKV,kBAGxB,cAAC,EAAD,CAAUJ,SAAYe,S,+BAK5B,WAAoB,IAAD,OACjBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKf,SAAU,CAACT,SAAUwB,W,GAxC3BC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f3e4275.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.style.css'\n\nexport const Card = props => {\n    return(\n        <div className = 'card-container'>\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n            <h1> { props.monster.name } </h1> \n            <h2> { props.monster.email }</h2>\n        </div>\n    );\n}","import React from 'react';\n\nimport './card-list.style.css'\nimport {Card} from '../card/card.component'\n\nexport const CardList = props =>  {\n   return( <div className=\"card-list\">\n       {\n              props.monsters.map(monster => \n                (\n                    <Card key={monster.id} monster={monster}/>\n              )\n              )\n        }\n        </div> );\n}  \n","import React from 'react';\n\nimport './search-box.style.css';\n\nexport const SearchBox = ( { placeholder, handleChange } ) => {\n    return(\n    <div className='searchbox-holder'>\n    <input\n        className ='search'\n        type = 'search'\n        placeholder = { placeholder }\n        onChange = { handleChange }\n    ></input>\n    </div>\n    );\n}","import React, {Component} from 'react';\nimport {  CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state =  {\n        monsters: [],\n        searchField: ''\n    };\n   // this.handleChange = this.handleChange.bind(this);\n  }\n /*  handleChange(e) {\n   this.setState( { searchField : e.target.value });\n  } */\n  handleChange = (e) => {\n    this.setState( { searchField : e.target.value });\n   }\n  render(){\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      )\n\n    return (\n      <div className=\"App\">\n        <div>\n          <h1>monsters Rolodex</h1>\n         <SearchBox\n          placeholder = 'search monsters'\n          handleChange = { this.handleChange }\n         ></SearchBox>\n         </div>\n        <CardList monsters = {filteredMonsters}>     \n        </CardList>\n      </div>\n    )\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState( {monsters: users } ))\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}